{Application 'LISTCLUST' logic file generated by CSPro }
PROC GLOBAL

  numeric wcluster, wenumerat, i, counthh, changes = 0, enumerator, nsegments = 0, countent = 0;
  numeric closedate, expectedhh;
  numeric ngps = 0, templat = 0, templon = 0, tempalt = 0;
  numeric xlatitude, xlongitude, xaltitude, xaccuracy, xsatellite;
  numeric onefile = 0; // flag to control if run for multiple clusters or just one
  numeric IntCode;
  alpha(1) latpole;
  alpha(1) lngpole;

  string line1;
  string nogps;

PROC HHLISTING_FF
preproc
  { get language from calling menu }
  SetLanguage( GetLanguage() );

  wcluster  = tonumber( sysparm()[1:4] );
  wenumerat = tonumber( sysparm()[5:4] );
  onefile  = (wcluster <> 0);
  IntCode = tonumber(SysParm("Interviewer"));

  nsegments = 0;        { number of segments in the cluster }
  counthh   = 0;        { total household counter }

  { set the name for the HTML file }
  if onefile then
    HTML_InitAlign();
    HTMLname = "ListClust.HTML";
    if FileExist( HTMLname ) then
      FileDelete( HTMLname )
    endif;
    setfile( HTMLFile, HTMLname, create );

    { initialize the report headings }
    zstring1 = MakeText( tr("Households Eligible for Selection for Cluster: %04d Enumerator %04d"), wcluster, IntCode );
    zstring2 = MakeText( tr("Date: %s"), edit("9999/99/99", SysDate("YYYYMMDD")));
    CellValues(1) = tr("Sequential line number");
    CellValues(2) = tr("HH");
    CellValues(3) = tr("Type");
    CellValues(4) = tr("Household address");
    CellValues(5) = tr("Description");
    CellValues(6) = tr("Head of household");
    CellValues(7) = tr("Code EDSIII");
    CellValues(8) = tr("GPS co-ordinates");
    { specify cklumns that are left aligned, strings are left aligned }
    CellAlign(1) = 3;  // column 3 is description
    CellAlign(2) = 4;  // column 4 address
    CellAlign(3) = 5;  // column 5 head of household
    HTML_Header( CellAlign, zstring1);  // generates a general HTML header
    HTML_BeginTable( CellValues, zstring2, 9 );  // generates the HTML table script with the column headers
  endif;

postproc

PROC HHLISTING_QUEST
  enumerator = LINTNUM;
  closedate  = LDATEFIN;
  expectedhh = LSEGHH;
  wcluster   = LCLUSTER;
  ngps     = 0;
  countent = 0;
  counthh  = 0;
  // output missing gps
  nogps = "";
  for i in RECORD2 do
    if !LINTRO in "8","9" then
      countent = countent + 1;
      if LNUMBER(i) <> notappl then
        counthh  = counthh + 1;
      endif;
      if LALTITUDE(i) <> notappl & LLONGITUDE(i) <> notappl & LLATITUDE(i) <> notappl then
        ngps  = ngps + 1;
      else // get cases where no GPS
        if !length(strip(nogps)) then // first entry
          nogps = nogps + maketext(" %03d", i);
        else
          nogps = nogps + maketext(", %03d", i);
        endif;
      endif;
    endif;
  enddo;
  if onefile then
    { heading for report with FileWrite command }
    HTML_Paragraph( " " );
    line1 = maketext( tr("Households expected in cluster %d, total entries in roster %d households listed %d"), LSEGHH, countent, counthh );
    HTML_ParagraphS( line1 );
    // report gps not taken
    HTML_Paragraph( " " );
    line1 = maketext( tr("Entries in roster %d, GPS taken %d, GPS not taken %d: %03d% missing"), countent, ngps, countent-ngps, 100-(ngps/countent * 100));
    HTML_ParagraphS( line1 );
    HTML_Paragraph( " " );
    // display a list of records with missing gps
    // disabled for CG81 since they are taking GPS outside of the listing app !!
    // if length(strip(nogps)) then
    //   line1 = tr("List of records with missing GPS: ") + nogps;
    //   HTML_ParagraphS( line1 );
    // endif;

    ngps = 0;
    for i in RECORD2 do
      if !LINTRO in "8","9" then
        { populates the elements of a row based on household information }
        CellValues(1) = edit("9999", i);
                if LTRUEHH = 1 then
          CellValues(2) = edit("9999", LNUMBER);
                else
          CellValues(2) = "BLANK";
                endif;
        when LSTRUCTT;
             1 -> CellValues(3) = getlabel(LSTYPE, LSTYPE);       { Parcelle habitée}
             2 -> CellValues(3) = getlabel(LSTRUCTT, LSTRUCTT);   { Parcelle non habité}
             3 -> CellValues(3) = getlabel(LINFRAS, LINFRAS);     { Infrastructure }
        endwhen;
        CellValues(4) = strip(LADDRESS);
        CellValues(5) = strip(LNOTES);
        CellValues(6) = strip(LNAME);
        if LSTRUCT > 999 then
          CellValues(7) = edit("999",LCLUSTER) + "/" + edit("9999", LSTRUCT) + "/" + edit("99",LHOUSEH);
        else
          CellValues(7) = edit("999",LCLUSTER) + "/" + edit("999", LSTRUCT) + "/" + edit("99",LHOUSEH);
        endif;
        { accumulate household coordinates to average them at the cluster level }
        if LALTITUDE(i) <> notappl & LLONGITUDE(i) <> notappl & LLATITUDE(i) <> notappl then
          ngps  = ngps + 1;
          templat = templat + LLATITUDE(i);
          templon = templon + LLONGITUDE(i);
          tempalt = tempalt + LALTITUDE(i);
          if ngps = 1 then
                latpole = LLATPOLE(i);
                    lngpole = LLNGPOLE(i);
          endif;
          CellValues(8) = maketext("%4.6f-%4.6f", LLATITUDE, LLONGITUDE);
          if LINTGPS(i) = 2 then
            xaccuracy =  LACCURACY;
          endif;
          CellValues(9) = edit("99", xaccuracy) + " / " +  edit("99", xsatellite);
        else
          CellValues(8) = tr("Not read");
          CellValues(9) = "BLANK";
        endif;
        HTML_OneRow( CellValues, 8 );   // generates the HTML script for a row with relevant household data
      endif;
    enddo;
    HTML_EndTable();
  else
    // write out some information to the control file if running for many clusters !!!
    { update control file }
    CSAMPLE = wcluster;
    if loadcase( CONTROL, CSAMPLE ) then
      { households listed for cluster }
      if CHTOTAL <> counthh then
        CHTOTAL = counthh;
        changes = 1;
      endif;
      { GPS coordinates captured }
      if CGPSAVAIL = 0 & ngps >= 1 then
        CGPSAVAIL = 1;
        changes  = 1;
      endif;
      { date when cluster was declared as closed by the enumerator in the field }
      if CFINENUM = 0 & !closedate in 0,notappl | CFINENUM < closedate then
        CFINENUM = closedate;
        changes = 1;
      endif;
      if changes then
        writecase( CONTROL );
      endif;
    endif;
  endif;


  if onefile then
    { Cluster segmentation report }
    SCLUSTER = wcluster;
    if loadcase( SEGMENT_DCT, SCLUSTER ) then
      zstring2 = tr("Cluster Segmentation");
      CellValues(1) = tr("Segment");
      CellValues(2) = tr("Households");
      CellValues(3) = tr("Cummulative");
      CellValues(4) = tr("Percent");
      HTML_Paragraph( " " );
      HTML_Paragraph( " " );
      HTML_BeginTable( CellValues, zstring2, 4 );  // generates the HTML table script with the column headers
      for i in SEGMENT_DCT.SEGREC2 do
        CellValues(1) = edit("99", SEGNUM);
        CellValues(2) = edit("Z99", SHHNUMB);
        CellValues(3) = edit("ZZ99",SCUMMUL);
        CellValues(4) = edit("Z99.9",SPERCENT);
        HTML_OneRow( CellValues, 4 );   // generates the HTML script for a row with relevant household data
            nsegments = nsegments + 1;
      enddo;
      HTML_EndTable();
      HTML_Paragraph( " " );
      line1 = maketext(tr("Segment selected %d, Number of households in selected segment %d"), SSEGNUM, SSEGHH);
      HTML_ParagraphS( line1 );
    endif;
   
    {{GPS}
    { !!! Report coordinates when collected at cluster level }
    GCLUSTER = wcluster;
    if loadcase( GPS_DCT, GCLUSTER ) & GLATITUDE(1) <> notappl then
      zstring2 = tr("Cluster Coordinates");
      CellValues(1) = tr("Reading");
      CellValues(2) = tr("Latitude");
      CellValues(3) = tr("Longitude");
      CellValues(4) = tr("Altitude");
      CellValues(5) = tr("Satellites");
      CellValues(6) = tr("Accuraccy");
      HTML_Paragraph( " " );
      HTML_Paragraph( " " );
      HTML_BeginTable( CellValues, zstring2, 6 );  // generates the HTML table script with the column headers
      for i in GPS_DCT.GPSSEC do
        if GLATITUDE <> notappl then
              ngps = ngps + 1;   // necessary to update control file
          CellValues(1) = edit("9", i);
          CellValues(2) = GLATPOLE + edit("ZZZ9.999", GLATITUDE);
          CellValues(3) = GLNGPOLE + edit("ZZZ9.999", GLONGITUDE);
          CellValues(4) = edit("ZZZ9",GALTITUDE);
          CellValues(5) = edit("Z9",GSATELLIT);
          CellValues(6) = edit("Z9",GACCURACY);
          HTML_OneRow( CellValues, 6 );   // generates the HTML script for a row with relevant household data
        endif;
      enddo;
      HTML_EndTable();
    endif;
    {GPS}}
    {+GPS}
    { !!! Report coordinates when collected at household level }
    if ngps > 0 then
      xlatitude  = templat / ngps;
      xlongitude = templon / ngps;
      xaltitude  = tempalt / ngps;
      zstring2 = tr("Cluster coordinates based on average from households");
      CellValues(1) = tr("Households");
      CellValues(2) = tr("Latitude");
      CellValues(3) = tr("Longitude");
      CellValues(4) = tr("Altitude");
      HTML_Paragraph( " " );
      HTML_Paragraph( " " );
      HTML_BeginTable( CellValues, zstring2, 4 );  // generates the HTML table script with the column headers
      CellValues(1) = edit("ZZ9", ngps);
      CellValues(2) = latpole + edit("ZZZ9.999", xlatitude);
      CellValues(3) = lngpole + edit("ZZZ9.999", xlongitude);
      CellValues(4) = edit("ZZZ9",xaltitude);
      HTML_OneRow( CellValues, 4 );   // generates the HTML script for a row with relevant household data
      HTML_EndTable();
    else
      HTML_Paragraph( " " );
      line1 = maketext(tr("There are no valid GPS coordinates for cluster %04d"), wcluster);
      HTML_ParagraphS( line1 );
    endif;
    {GPS+}
  endif;

  { update control file }
  CSAMPLE = wcluster;
  if loadcase( CONTROL, CSAMPLE ) then
    { households listed for cluster }
    if CHTOTAL <> counthh then
      CHTOTAL = counthh;
      changes = 1;
    endif;
    { households expected based on census/segmentation }
    if CHEXPECT <> expectedhh then
      CHEXPECT = expectedhh;
      changes = 1;
    endif;
    { enumerator different from first enumerator }
    if onefile & CSUPERV <> enumerator then
      HTML_Paragraph( " " );
      line1 = maketext(tr("There was a change in enumerators: first enumerator %04d current enumerator %04d"), CSUPERV, enumerator );
      HTML_ParagraphS( line1 );
      CSUPERV = enumerator;
      changes = 1;
    endif;
    { GPS coordinates captured }
    if CGPSAVAIL = 0 & ngps >= 1 then
      CGPSAVAIL = 1;
      changes  = 1;
    endif;
    numeric wgps = ngps/countent * 100;
    { date when cluster data was used by this program for the first time }
    { only updates if used to view the listing for one cluster !!! }
    if onefile & !CACCEPT then
      CACCEPT = sysdate("YYYYMMDD");
      changes = 1;
    endif;
    { date when cluster was declared as closed by the enumerator in the field }
    if CFINENUM = 0 & !closedate in 0,notappl | CFINENUM < closedate then
      CFINENUM = closedate;
      changes = 1;
    endif;
    { cluster segmentation }
    if CSEGMENT = 0 & nsegments >= 1 | CSEGMENT <> nsegments then
      CSEGMENT = nsegments;
      changes = 1;
    endif;
    if changes then
      writecase( CONTROL );
    endif;
  endif;
  if onefile then
    HTML_End();
    view( "file://" + pathname(application) +  HTMLName );
  endif;
