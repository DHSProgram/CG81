
  FILE HTMLFile;                       { name of HTML file, normally the application that uses it with extension HTML }
  
  array string CellValues(50);           { used to store the values of a full row in a report }
  array CellAlign(50);                  { specifies if the cell is left aligned. 0-Center aligned, other correspond to the column that is left aligned }
  string HTMLname, zstring1, zstring2;    { working variables associated to HTML construction }
  
  // set constants for utf characters for display
  string utf_tick_icon    =  "&#x2705;";
  string utf_x_icon       =  "&#x10102;";
  string utf_view_icon    =  "&#x1f50e;";
  // string utf_child_icon   =  "&#129490;&#x1F3FE;";
  string utf_child_icon   =  "&#129490";
  string utf_biom_icon    =  "&#x2696;";
  // string utf_qre_icon     =  "&#x1F4D3;";
  string utf_qre_icon     =  "&#x1F4CB;";
  // string utf_hh_icon      =  "&#x1f46a;";
  string utf_hh_icon      =  "&#x1f3e0;";

  // string utf_man_icon     =  "&#x1f6b9;";
  // string utf_woman_icon   =  "&#x1f6ba;";
  string utf_man_icon     =  "&#x1f9e2;";
  string utf_woman_icon   =  "&#x1f9e3;";

  { initialize array that stores the type of alignment for each cell }
  function HTML_InitAlign()
    numeric z;
    do z = 1 while z <= 50
      CellAlign(z) = 0;
    enddo;
  end;

  function styles ();
    // inline style sheet
    FileWrite(HTMLFile,'      h1 {');
    FileWrite(HTMLFile,'       font-family: Georgia, "Times New Roman", Times, serif;');
    FileWrite(HTMLFile,'       font-size: 18px;');
    FileWrite(HTMLFile,'       font-weight: bold;');
    FileWrite(HTMLFile,'       color: #000000;');
    FileWrite(HTMLFile,'      }');
    FileWrite(HTMLFile,'       ');
    FileWrite(HTMLFile,'      h2 {');
    FileWrite(HTMLFile,'       font-family: Georgia, "Times New Roman", Times, serif;');
    FileWrite(HTMLFile,'       font-size: 16px;');
    FileWrite(HTMLFile,'       font-weight: bold;');
    FileWrite(HTMLFile,'       color: #000000;');
    FileWrite(HTMLFile,'       border-bottom: 1px solid ;');
    FileWrite(HTMLFile,'      }');
    FileWrite(HTMLFile,'      h1, h5, th { text-align: left; }');
    FileWrite(HTMLFile,'      table { font-family: Segoe UI; box-shadow: 08px 08px 5px #888; border: thin ridge grey; }');
    FileWrite(HTMLFile,'      th { background: #0046c3; color: #fff; max-width: 200px; padding: 1px 1px; }');
    FileWrite(HTMLFile,'      td { font-size: 16px; padding: 3px 10px; color: #000; }');
    FileWrite(HTMLFile,'      tr { background: #b8d1f3; }');
    FileWrite(HTMLFile,'      tr:nth-child(even) { background: #dae5f4; }');
    FileWrite(HTMLFile,'      tr:nth-child(odd) { background: #b8d1f3; }');
  end;

  { function to write the the header of an HTML file }
  function HTML_Header( array align(), string caption, optional list string ext_scripts )
    numeric z;
    string ztemp;
    open( HTMLFile, create );
    FileWrite( HTMLFile, "<!DOCTYPE html>" );
    FileWrite( HTMLFile, "<html>" );
    FileWrite( HTMLFile, "  <head>" );
    FileWrite( HTMLFile, '    <meta charset="utf-8">' );
    FileWrite( HTMLFile, '<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=yes, maximum-scale=1, minimum-scale=1, user-scalable=yes">');
    FileWrite( HTMLFile, '<script src="/action-invoker.js"></script>');
    FileWrite( HTMLFile, '<script src="/external/jquery/jquery.min.js"></script>');
    // add any external application specific scripts
    do numeric ctr = 1 until ctr > ext_scripts.length()
      FileWrite( HTMLFile, '<script src="' + ext_scripts(ctr) + '"></script>');
    enddo;
    FileWrite( HTMLFile, "    <title> DHS Report </title>" );
	// if getos() = 10 then
      // FileWrite( HTMLFile, '    <link href="../Library/TablesStyle.css" rel="stylesheet" type="text/css">' );  // Windows
	// else
      // FileWrite( HTMLFile, '    <link href="../Library/TablesStyle.css" rel="stylesheet" type="text/css">' );  // Windows
	// endif;
    FileWrite( HTMLFile, "    <style>" );
    // put stylesheet inline to avoid issue of Android not finding an external
    // css file
    styles();
    do z = 1 while align(z)
      ztemp = MakeText( "      td:nth-child(%d) { text-align: left; }", align(z) );
      FileWrite( HTMLFile, ztemp );
    enddo;
    FileWrite( HTMLFile, "    </style>" );
    FileWrite( HTMLFile, "  </head>" );
    FileWrite( HTMLFile, "  <body>" );
    FileWrite( HTMLFile, "     <h1>" + caption + "</h1>" );
    close( HTMLFile );
  end;

  { function to write the the header of an HTML table }
  function HTML_BeginTable( array string cells(), string caption, ncells, string str_id = "" )
    numeric z;
    open( HTMLFile, append );
    if length(str_id) then
      FileWrite( HTMLFile, '    <table id = "%s">', str_id);
    else
      FileWrite( HTMLFile, "    <table>");
    endif;
    FileWrite( HTMLFile, '      <caption style="font-weight:bold">' + caption + '</caption>' );
    FileWrite( HTMLFile, "      <thead>" );
    FileWrite( HTMLFile, "        <tr>" );
    do z = 1 while z <= ncells
	  if cells(z) = "BLANK" then cells(z) = "&nbsp" endif;
      FileWrite( HTMLFile, '         <th scope="col">' + cells(z) + '</th>' );
	enddo;
    FileWrite( HTMLFile, "        </tr>" );
    FileWrite( HTMLFile, "      </thead>" );
    FileWrite( HTMLFile, "      <tbody>" );
    close( HTMLFile );
  end;

  { function to write one row of data in the HTML table }
  function HTML_OneRow( array string cells(), ncells )
    numeric z;
    open( HTMLFile, append );
    FileWrite( HTMLFile, "        <tr>" );
    do z = 1 while z <= ncells
	  if cells(z) = "BLANK" then cells(z) = "&nbsp" endif;
      FileWrite( HTMLFile, "          <td>" + cells(z) + "</td>" );
	enddo;
    FileWrite( HTMLFile, "        </tr>" );
    close( HTMLFile );
  end;

  { function to write one row in a table for a row that behaves as a subtitle }
  function HTML_Subtitle( string caption, ncells )
    open( HTMLFile, append );
	string tmpstring;
    FileWrite( HTMLFile, "        <tr>" );
	tmpstring = MakeText( '          <td colspan="%d" style="text-align:left; font-weight:bold">' + caption + '</td>', ncells );
    FileWrite( HTMLFile, tmpstring );
    FileWrite( HTMLFile, "        </tr>" );
    close( HTMLFile );
  end;

  { function to close the HTML table definition }
  function HTML_EndTable()
    open( HTMLFile, append );
    FileWrite( HTMLFile, "      </tbody>" );
    FileWrite( HTMLFile, "    </table>" );
    close( HTMLFile );
  end;

  { function to include a regular paragraph }
  function HTML_Paragraph( string caption )
    open( HTMLFile, append );
    FileWrite( HTMLFile, "    <p>" + caption +  "</p>" );
    close( HTMLFile );
  end;

  { function to include a strong (bold) paragraph }
  function HTML_ParagraphS( string caption )
    open( HTMLFile, append );
    FileWrite( HTMLFile, '    <strong style="color:Red;">' + caption +  "</strong>" );
    close( HTMLFile );
  end;

  { function to close HTML }
  function HTML_End()
    open( HTMLFile, append );
    FileWrite( HTMLFile, "  </body>" );
    FileWrite( HTMLFile, "</html>" );
    close( HTMLFile );
  end;
